{
  "values": [
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "column": "num_veh",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 0,
      "first": false
    },
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "column": "senc",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 1,
      "first": false
    },
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "orderColumn": "Num_Acc",
      "sum2": false,
      "column": "catv",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 2,
      "first": false
    },
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "column": "obs",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 3,
      "first": false
    },
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "column": "obsm",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 4,
      "first": false
    },
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "column": "choc",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 5,
      "first": false
    },
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "column": "manv",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 6,
      "first": false
    },
    {
      "min": false,
      "max": false,
      "count": false,
      "last": false,
      "sum": false,
      "type": "string",
      "concat": false,
      "column": "occutc",
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "$idx": 7,
      "first": false
    },
    {
      "customExpr": "sum(case when (catv \u003d \u0027voiture\u0027 or catv \u003d \u0027voiturette\u0027 or catv \u003d \u0027utilitaire\u0027 or catv is NULL) then 1 else 0 end)",
      "type": "INT",
      "customName": "voiture_nb"
    },
    {
      "customExpr": "sum(case when (catv \u003d \u0027motocyclette +125cm3\u0027 or catv \u003d \u0027scooter -50cm3\u0027 or catv \u003d \u0027cyclomoteur -50cm3\u0027 or catv \u003d \u0027motocyclette +50cm3-125cm3\u0027 or catv \u003d \u0027scooter +125cm3\u0027) then 1 else 0 end)",
      "type": "INT",
      "customName": "deuxrouesmotorises_nb"
    },
    {
      "customExpr": "sum(case when (catv \u003d \u0027bicyclette\u0027) then 1 else 0 end)",
      "type": "INT",
      "customName": "velo_nb"
    },
    {
      "customExpr": "sum(case when (catv \u003d \u0027poids lourd\u0027) then 1 else 0 end)",
      "type": "INT",
      "customName": "poidslourd_nb"
    },
    {
      "customExpr": "sum(case when (catv \u003d \u0027\u0027 or catv \u003d \u0027tracteur+semi-remorque\u0027 or catv \u003d \u0027bus\u0027 or catv \u003d \u0027autre véhicule\u0027 or catv \u003d \u0027tracteur\u0027 or catv \u003d \u0027quad +50cm3\u0027 or catv \u003d \u0027tramway\u0027 or catv \u003d \u0027engin spécial\u0027 or catv \u003d \u0027quad -50cm3\u0027 or catv \u003d \u0027train\u0027) then 1 else 0 end)",
      "type": "INT",
      "customName": "vehiculeautre_nb"
    }
  ],
  "outputColumnNameOverrides": {
    "nbv_first": "nbv",
    "LIBELLE_JOUR_first": "LIBELLE_JOUR",
    "geo_source_first": "geo_source",
    "geo_score_first": "geo_score",
    "ANNEE_first": "ANNEE",
    "atm_first": "atm",
    "v1_first": "v1",
    "heures_minutes_first": "heures_minutes",
    "latitude_first": "latitude",
    "SEMAINE_first": "SEMAINE",
    "original_city_code_first": "original_city_code",
    "voie_first": "voie",
    "catr_first": "catr",
    "date_first": "date",
    "current_name_first": "current_name",
    "adr_first": "adr",
    "mois_first": "mois",
    "int_first": "int",
    "longitude_first": "longitude",
    "date_formated_first": "date_formated",
    "col_first": "col",
    "HEURE_first": "HEURE",
    "geo_type_first": "geo_type",
    "lum_first": "lum",
    "NOM_DEPT_first": "NOM_DEPT",
    "current_city_code_first": "current_city_code",
    "v2_first": "v2",
    "NOM_REG_first": "NOM_REG",
    "circ_first": "circ",
    "dep_first": "dep",
    "agg_first": "agg",
    "original_name_first": "original_name",
    "geopoint_first": "geopoint"
  },
  "engineParams": {
    "hive": {
      "skipPrerunValidate": false,
      "hiveconf": [],
      "addDkuUdf": false,
      "executionEngine": "HIVECLI_LOCAL",
      "inheritConf": "default"
    },
    "impala": {
      "forceStreamMode": true
    },
    "sparkSQL": {
      "pipelineAllowMerge": true,
      "sparkConfig": {
        "inheritConf": "default",
        "conf": []
      },
      "pipelineAllowStart": true,
      "overwriteOutputSchema": false,
      "readParams": {
        "map": {}
      },
      "useGlobalMetastore": false
    },
    "lowerCaseSchemaIfEngineRequiresIt": true
  },
  "keys": [
    {
      "min": false,
      "max": false,
      "last": false,
      "count": false,
      "column": "Num_Acc",
      "sum": false,
      "countDistinct": false,
      "stddev": false,
      "avg": false,
      "type": "string",
      "first": false,
      "concat": false
    }
  ],
  "postFilter": {
    "enabled": false,
    "distinct": false
  },
  "computedColumns": [],
  "globalCount": false,
  "preFilter": {
    "enabled": false,
    "distinct": false
  },
  "enlargeYourBits": true
}