{
  "steps": [
    {
      "type": "FindReplace",
      "params": {
        "output": "",
        "normalization": "EXACT",
        "matching": "FULL_STRING",
        "stopAfterFirstMatch": false,
        "mapping": [
          {
            "to": "000"
          }
        ],
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "com"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "steps": [
        {
          "type": "PythonUDF",
          "params": {
            "mode": "ROW",
            "pythonSourceCode": "def invalid_coordinates(lon, lat):\n    if lon and lat:\n        lon \u003d int(lon)\n        lat \u003d int(lat)\n        return (abs(lat) \u003c 10 or abs(lon) \u003c 10 or\n                (lat % 1000 \u003d\u003d 0 and lon % 1000 \u003d\u003d 0))\n    else:\n        return True\n\ndef process(row):\n    if invalid_coordinates(row[\"long\"], row[\"lat\"]):\n        row[\"long\"] \u003d None\n        row[\"lat\"] \u003d None\n    return row\n",
            "stopOnError": true,
            "usePythonUnicode": true
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "lat",
            "expression": "lat / 100000"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "long",
            "expression": "long / 100000"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "lat",
            "expression": "if(gps \u003d\u003d \u0027Y\u0027, -1 * abs(lat), lat)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "lat",
            "expression": "if(gps \u003d\u003d \u0027R\u0027, -1 * abs(lat), lat)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "long",
            "expression": "if(gps \u003d\u003d \u0027G\u0027, -1 * abs(long), long)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "long",
            "expression": "if(gps \u003d\u003d \u0027A\u0027, -1 * abs(long), long)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        }
      ],
      "metaType": "GROUP",
      "preview": false,
      "disabled": false,
      "name": "Nettoyage coordonn√©es",
      "alwaysShowComment": false
    },
    {
      "type": "PythonUDF",
      "params": {
        "mode": "CELL",
        "pythonSourceCode": "def process(row):\n    return \"20{:02d}{:02d}{:02d}{:04d}\".format(\n            int(row[\u0027an\u0027]), int(row[\u0027mois\u0027]), int(row[\u0027jour\u0027]), int(row[\u0027hrmn\u0027])))\n    \n",
        "column": "date",
        "stopOnError": true,
        "usePythonUnicode": true
      },
      "metaType": "PROCESSOR",
      "preview": true,
      "disabled": false,
      "alwaysShowComment": false
    }
  ],
  "tags": [],
  "origin": "PREPARE_RECIPE",
  "columnsSelection": {
    "mode": "ALL"
  },
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  },
  "analysisColumnData": {},
  "explorationSampling": {
    "selection": {
      "samplingMethod": "HEAD_SEQUENTIAL",
      "partitionSelectionMethod": "ALL",
      "maxRecords": 10000,
      "targetRatio": 0.02
    },
    "autoRefreshSample": false,
    "_refreshTrigger": 0
  },
  "vizSampling": {
    "autoRefreshSample": false,
    "_refreshTrigger": 0
  },
  "exploreUIParams": {
    "autoRefresh": true
  },
  "globalSearchQuery": "",
  "explorationFilters": [
    {
      "type": "global_search",
      "$$hashKey": "1NB"
    }
  ],
  "previewMode": "ALL_ROWS",
  "charts": [],
  "chartsEngine": "LINO"
}