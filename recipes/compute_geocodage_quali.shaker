{
  "steps": [
    {
      "type": "CreateColumnWithGREL",
      "params": {
        "column": "valid_coord",
        "expression": "!isBlank(long) \u0026\u0026 !isBlank(lat) \u0026\u0026 lat !\u003d 0"
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "CreateColumnWithGREL",
      "params": {
        "column": "lat",
        "expression": "if(lat!\u003d0,lat/100000,\"\")"
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": true,
      "alwaysShowComment": false
    },
    {
      "type": "CreateColumnWithGREL",
      "params": {
        "column": "long",
        "expression": "if(long!\u003d0,long/100000,\"\")"
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": true,
      "alwaysShowComment": false
    },
    {
      "type": "CreateColumnWithGREL",
      "params": {
        "column": "valid_address",
        "expression": "!isBlank(adr)"
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "CreateColumnWithGREL",
      "params": {
        "column": "quali_coord",
        "expression": "if(valid_coord, \"Ok\", if(valid_address, \"Maybe\", \"Dead\"))"
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "FindReplace",
      "params": {
        "output": "",
        "normalization": "EXACT",
        "matching": "FULL_STRING",
        "stopAfterFirstMatch": false,
        "mapping": [
          {
            "to": "0"
          }
        ],
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "col"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "FindReplace",
      "params": {
        "output": "",
        "normalization": "EXACT",
        "matching": "FULL_STRING",
        "stopAfterFirstMatch": false,
        "mapping": [
          {
            "to": "\"000\""
          }
        ],
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "com"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "FindReplace",
      "params": {
        "output": "",
        "normalization": "EXACT",
        "matching": "FULL_STRING",
        "stopAfterFirstMatch": false,
        "mapping": [
          {
            "to": "1"
          }
        ],
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "atm"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "FindReplace",
      "params": {
        "output": "",
        "normalization": "EXACT",
        "matching": "SUBSTRING",
        "stopAfterFirstMatch": false,
        "mapping": [
          {
            "to": "1"
          }
        ],
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "atm"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "FindReplace",
      "params": {
        "output": "",
        "normalization": "EXACT",
        "matching": "SUBSTRING",
        "stopAfterFirstMatch": false,
        "mapping": [
          {
            "from": "\""
          }
        ],
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "com"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "FilterOnBadType",
      "params": {
        "type": "LongMeaning",
        "action": "CLEAR_CELL",
        "booleanMode": "AND",
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "lat"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "FilterOnBadType",
      "params": {
        "type": "LongMeaning",
        "action": "CLEAR_CELL",
        "booleanMode": "AND",
        "appliesTo": "SINGLE_COLUMN",
        "columns": [
          "long"
        ]
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "type": "PythonUDF",
      "params": {
        "mode": "ROW",
        "pythonSourceCode": "# Modify the process function to fit your needs\ndef process(row):\n    # In \u0027row\u0027 mode, the process function \n    # must return the full row.\n    # The \u0027row\u0027 argument is a dictionary of columns of the row\n    # You may modify the \u0027row\u0027 in place to\n    # keep the previous values of the row.\n    # Here, we simply add two new columns.\n    if row[\u0027lat\u0027] is None or row[\u0027long\u0027] is None:\n        pass\n    elif row[\u0027lat\u0027] and len(row[\u0027lat\u0027]) \u003c 5:\n        row[\u0027lat\u0027] \u003d None\n        row[\u0027long\u0027] \u003d None\n    elif int(row[\u0027lat\u0027]) \u003d\u003d 0 or int(row[\u0027long\u0027]) \u003d\u003d 0:\n        row[\u0027lat\u0027] \u003d None\n        row[\u0027long\u0027] \u003d None\n    elif int(row[\u0027lat\u0027]) % 1000 and int(row[\u0027long\u0027]) % 1000 \u003d\u003d 0:\n        row[\u0027lat\u0027] \u003d None\n        row[\u0027long\u0027] \u003d None\n    else:\n        row[\u0027lat\u0027] \u003d float(row[\u0027lat\u0027])/100000\n        row[\u0027long\u0027] \u003d float(row[\u0027long\u0027])/100000\n        if row[\u0027gps\u0027] \u003d\u003d \u0027R\u0027: # La RÃ©union\n            row[\u0027lat\u0027] \u003d - (row[\u0027lat\u0027])\n        if row[\u0027gps\u0027] in (\u0027G\u0027, \u0027A\u0027): # Guadeloupe et Martinique\n            row[\u0027long\u0027] \u003d - (row[\u0027long\u0027])\n    \n    return row\n",
        "stopOnError": true,
        "usePythonUnicode": true
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": true,
      "alwaysShowComment": false
    },
    {
      "steps": [
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "an",
            "expression": "\"20%02d\".format(an)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "mois",
            "expression": "\"%02d\".format(mois)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "jour",
            "expression": "\"%02d\".format(jour)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "CreateColumnWithGREL",
          "params": {
            "column": "hrmn",
            "expression": "\"%04d\".format(hrmn)"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "ColumnsConcat",
          "params": {
            "join": "",
            "columns": [
              "an",
              "mois",
              "jour",
              "hrmn"
            ],
            "outputColumn": "date"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "DateParser",
          "params": {
            "outCol": "",
            "lang": "auto",
            "timezone_id": "UTC",
            "formats": [
              "yyyyMMddHHmm"
            ],
            "appliesTo": "SINGLE_COLUMN",
            "columns": [
              "date"
            ]
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        }
      ],
      "metaType": "GROUP",
      "preview": false,
      "disabled": false,
      "name": "Date",
      "alwaysShowComment": false
    }
  ],
  "tags": [],
  "origin": "PREPARE_RECIPE",
  "columnsSelection": {
    "mode": "ALL"
  },
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  },
  "analysisColumnData": {},
  "explorationSampling": {
    "selection": {
      "samplingMethod": "HEAD_SEQUENTIAL",
      "partitionSelectionMethod": "ALL",
      "maxRecords": 10000,
      "targetRatio": 0.02
    },
    "autoRefreshSample": false,
    "_refreshTrigger": 3
  },
  "vizSampling": {
    "autoRefreshSample": false,
    "_refreshTrigger": 0
  },
  "exploreUIParams": {
    "autoRefresh": true
  },
  "globalSearchQuery": "",
  "explorationFilters": [
    {
      "type": "global_search",
      "$$hashKey": "DTZ"
    }
  ],
  "previewMode": "ALL_ROWS",
  "charts": [],
  "chartsEngine": "LINO"
}