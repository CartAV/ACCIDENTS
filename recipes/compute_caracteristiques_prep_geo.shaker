{
  "steps": [
    {
      "steps": [
        {
          "type": "PythonUDF",
          "params": {
            "mode": "CELL",
            "pythonSourceCode": "def process(row):\n    if row[\"bano_citycode\"] and row[\"bano_citycode\"][0:2] !\u003d row[\"original_city_code\"][0:2]:\n        return 0.0\n    else:\n        return row[\"bano_score\"]\n",
            "column": "bano_score",
            "stopOnError": true,
            "usePythonUnicode": true
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "PythonUDF",
          "params": {
            "mode": "CELL",
            "pythonSourceCode": "def process(row):\n    if row[\"ban2_score\"] and row[\"ban2_citycode\"][0:2] !\u003d row[\"original_city_code\"][0:2]:\n        return 0.0\n    else:\n        return row[\"ban2_score\"]\n",
            "column": "ban2_score",
            "stopOnError": true,
            "usePythonUnicode": true
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        }
      ],
      "metaType": "GROUP",
      "preview": false,
      "disabled": false,
      "name": "Invalider gécodages hors département",
      "alwaysShowComment": false
    },
    {
      "type": "PythonUDF",
      "params": {
        "mode": "ROW",
        "pythonSourceCode": "def process(row):\n    # Si on a des coordonnées saisies dès la BAAC\n    if row[\"long\"] and row[\"lat\"]:\n        # Si le score est bon, et qu’il s’agit d’un pas de porte,\n        # On préfère le résultat de la BAN\n        if row[\"ban_score\"] \u003e 0.8 and row[\"ban_type\"] \u003d\u003d \"housenumber\":\n            row[\"longitude\"] \u003d row[\"ban_longitude\"]\n            row[\"latitude\"] \u003d row[\"latitude\"]\n            row[\"geo_source\"] \u003d \"ban + citycode\"\n            row[\"geo_type\"] \u003d row[\"ban_type\"]\n        # Sinon on préfère les coordonnées saisies\n        else:\n            row[\"longitude\"] \u003d row[\"long\"]\n            row[\"latitude\"] \u003d row[\"lat\"]\n            row[\"geo_source\"] \u003d \"baac\"\n            row[\"geo_type\"] \u003d \"unknown\"\n    \n    # Pas de géocodage saisi dans la baac\n    else:\n        # On récupère simplement celui qui a le plus gros score\n        if row[\"ban_score\"] \u003e row[\"bano_score\"]:\n            if row[\"ban_score\"] \u003e row[\"ban2_score\"]:\n                row[\"longitude\"] \u003d row[\"ban_longitude\"]\n                row[\"latitude\"] \u003d row[\"ban_latitude\"]\n                row[\"geo_source\"] \u003d \"ban + citycode\"\n                row[\"geo_type\"] \u003d row[\"ban_type\"]\n        elif row[\"bano_score\"] \u003e row[\"ban2_score\"]:\n            row[\"longitude\"] \u003d row[\"bano_longitude\"]\n            row[\"latitude\"] \u003d row[\"bano_latitude\"]\n            row[\"geo_source\"] \u003d \"bano + name\"\n            row[\"geo_type\"] \u003d row[\"bano_type\"]\n        elif row[\"ban2_longitude\"]:\n            row[\"longitude\"] \u003d row[\"ban2_longitude\"]\n            row[\"latitude\"] \u003d row[\"ban2_latitude\"]\n            row[\"geo_source\"] \u003d \"ban + name\"\n            row[\"geo_type\"] \u003d row[\"ban2_type\"]\n        \n    return row\n",
        "stopOnError": true,
        "usePythonUnicode": true
      },
      "metaType": "PROCESSOR",
      "preview": false,
      "disabled": false,
      "alwaysShowComment": false
    },
    {
      "steps": [
        {
          "type": "GeoPointExtractor",
          "params": {
            "column": "ban_geopoint",
            "lat_col": "ban_latitude",
            "lon_col": "ban_longitude"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "GeoPointExtractor",
          "params": {
            "column": "bano_geopoint",
            "lat_col": "bano_latitude",
            "lon_col": "bano_longitude"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "GeoPointExtractor",
          "params": {
            "column": "ban2_geopoint",
            "lat_col": "ban2_latitude",
            "lon_col": "ban2_longitude"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "GeoPointExtractor",
          "params": {
            "column": "baac_geopoint",
            "lat_col": "lat",
            "lon_col": "long"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "GeoDistanceProcessor",
          "params": {
            "input1": "baac_geopoint",
            "input2": "ban_geopoint",
            "output": "distance_baac_ban",
            "outputUnit": "KILOMETERS",
            "compareTo": "COLUMN"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "GeoDistanceProcessor",
          "params": {
            "input1": "baac_geopoint",
            "input2": "bano_geopoint",
            "output": "distance_baac_bano",
            "outputUnit": "KILOMETERS",
            "compareTo": "COLUMN"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        },
        {
          "type": "GeoDistanceProcessor",
          "params": {
            "input1": "ban_geopoint",
            "input2": "bano_geopoint",
            "output": "distance_ban_bano",
            "outputUnit": "KILOMETERS",
            "compareTo": "COLUMN"
          },
          "metaType": "PROCESSOR",
          "preview": false,
          "disabled": false,
          "alwaysShowComment": false
        }
      ],
      "metaType": "GROUP",
      "preview": false,
      "disabled": false,
      "name": "Coordonnées \u0026 distances",
      "alwaysShowComment": false
    }
  ],
  "tags": [],
  "origin": "PREPARE_RECIPE",
  "columnsSelection": {
    "mode": "ALL"
  },
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  },
  "analysisColumnData": {},
  "explorationSampling": {
    "selection": {
      "samplingMethod": "HEAD_SEQUENTIAL",
      "partitionSelectionMethod": "ALL",
      "maxRecords": 10000,
      "targetRatio": 0.02
    },
    "autoRefreshSample": false,
    "_refreshTrigger": 0
  },
  "vizSampling": {
    "autoRefreshSample": false,
    "_refreshTrigger": 0
  },
  "exploreUIParams": {
    "autoRefresh": true
  },
  "globalSearchQuery": "",
  "explorationFilters": [
    {
      "type": "global_search",
      "$$hashKey": "0RO"
    }
  ],
  "previewMode": "ALL_ROWS",
  "charts": [],
  "chartsEngine": "LINO"
}